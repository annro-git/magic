%h3= @deck.name

%p
  = "#{@deck.card_number} #{'carte'.pluralize(@deck.card_number)}"
  - if @deck.format.positive?
    , Format(s):
    = @deck.formats

%p
  - if @deck.user_id == current_user&.id
    = link_to 'Edit', edit_deck_path(slug: @deck.slug), class: 'btn btn-xs btn-warning'
    = link_to 'Classic view', my_deck_path(slug: @deck.slug), class: 'btn btn-xs btn-primary'
    = link_to 'Export', export_deck_path(@deck.slug), class: 'btn btn-xs btn-primary'
    = #link_to 'Generate boosters', generate_draft_path(@deck.id), class: 'btn btn-xs btn-primary'
    = link_to 'Sort by colors', my_deck_by_color_path(@deck.slug), class: 'btn btn-xs btn-primary'
  - elsif current_user&.id
    = link_to 'Copy', copy_public_deck_path(id: @deck.id), class: 'btn btn-xs btn-primary', method: :post

- main_cards_count = @main_cards.collect { |c| @deck.card_decks.where(card_id: c.id).first.occurences_in_main_deck }.sum

= "Main (#{main_cards_count}) :"
%table.table
  %thead
    %tr
      %td.col-md-3 Name
      %td.col-md-3
      %td.col-md-2 In my collection ?
  %tbody
    - card_in_collection = CardCollection::RetrieveMissingCardFromDeck.call(deck_id: @deck.id, user_id: current_user.id).resultat
    - sort_cards_by_type(@main_cards.decorate).each do |card|
      - occurrence_in_deck = @deck.card_decks.where(card_id: card.id).first.occurences_in_main_deck
      %tr
        %td
          = link_to card.title(show_rarity: true), extension_set_card_path(slug: card.extension_set.slug, id: card.id), data: { toggle: :popover, content: image_tag(card.image_url) }
          = "x #{occurrence_in_deck}"
        %td= show_mana_cost(card)
        %td
          - if card_in_collection[card.id] > occurrence_in_deck
            = occurrence_in_deck
          - else
            = card_in_collection[card.id]
          - card_in_collection[card.id] -= occurrence_in_deck

    - if @sideboards.any?
      %tr
        - sideboard_count = @sideboards.collect { |c| @deck.card_decks.where(card_id: c.id).first.occurences_in_sideboard }.sum
        %td{ colspan: 3 }= "Sideboard (#{sideboard_count}) :"
      - sort_cards_by_type(@sideboards.decorate).each do |card|
        - occurrence_in_deck = @deck.card_decks.where(card_id: card.id).first.occurences_in_sideboard
        %tr
          %td
            = link_to "#{card.title(show_rarity: true)}".html_safe, extension_set_card_path(slug: card.extension_set.slug, id: card.id), data: { toggle: :popover, content: image_tag(card.image_url) }
            = "x #{occurrence_in_deck}"
          %td= show_mana_cost(card)
          %td
            - if card_in_collection[card.id] > occurrence_in_deck
              = occurrence_in_deck
            - else
              = card_in_collection[card.id]

= color_graph(@deck)
= converted_mana_cost_graph(@deck)
