%h3= @deck.name
- missings = CardCollection::RetrieveMissingCardFromDeck.call(user_id: current_user.id, deck_id: @deck.id).result

%p
  = "#{@deck.card_number} #{'carte'.pluralize(@deck.card_number)}"
  - if @deck.format.positive?
    , Format(s):
    = @deck.formats
  - completed_at = 100 - (missings.sum {|k, v| v }.to_f / 75 * 100)
  %br
  = " completed at #{completed_at.round(2)}%"
%p= render 'deck_menu', locals: { view: 'classic' }

- main_cards_count = @main_cards.collect { |c| @deck.card_decks.where(card_id: c.id).first.occurences_in_main_deck }.sum

= "Main (#{main_cards_count}) :"
%ul.deck.cards-list.visual
  - sort_deck_cards(@main_cards).each do |label, cards|
    - cards.each_with_index do |card, index|
      %li
        %span= index == 0 ? "#{label} (#{cards.collect { |c| @deck.card_decks.where(card_id: c.id).first.occurences_in_main_deck }.sum})" : '&nbsp;'.html_safe
        = image_tag(card.image_url, class: 'img-responsive')
        %span.card-link= link_to card.title(show_rarity: true), extension_set_card_path(slug: card.extension_set.slug, id: card.id)
        %span.occur-number= "x #{@deck.card_decks.where(card_id: card.id).first.occurences_in_main_deck}"

- if @sideboards.any?
  - sideboard_cards_count = @sideboards.collect { |c| @deck.card_decks.where(card_id: c.id).first.occurences_in_sideboard }.sum
  = "Sideboard (#{sideboard_cards_count}) :"
  %ul.deck.cards-list.visual
    - @sideboards.decorate.each do |card|
      %li
        = image_tag(card.image_url, class: 'img-responsive')
        %span.card-link= link_to card.title(show_rarity: true), extension_set_card_path(slug: card.extension_set.slug, id: card.id)
        %span.occur-number= @deck.card_decks.where(card_id: card.id).first.occurences_in_sideboard

.desc
  = simple_format @deck.description
  - if missings.present?
    %br
    Cards missings to complete :
    %ul
    - missings.each do |name, missing_count|
      %li= "#{name} x #{missing_count}"
