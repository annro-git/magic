= link_to '< retour', user_decks_path

%h1
  #{@deck.name}
  - if current_user.is_admin?
    %small= @deck.id
%p
  = "#{@deck.card_number} #{'carte'.pluralize(@deck.card_number)}"
  - if @deck.formats.any?
    , Format(s):
    = @deck.formats.collect(&:name).join(', ')
- if @deck.user_id == current_user&.id
  %p
    = link_to 'editer', edit_deck_path(slug: @deck.slug), class: 'btn btn-xs btn-warning'
    = link_to 'vue avancée', detail_deck_path(slug: @deck.slug), class: 'btn btn-xs btn-primary'
    = link_to 'Exporter', export_deck_path(@deck.id), class: 'btn btn-xs btn-primary'
    = link_to 'Générer des boosters', generate_draft_path(@deck.id), class: 'btn btn-xs btn-primary'
    = link_to 'Tri par couleur', my_deck_by_color_path(@deck.slug), class: 'btn btn-xs btn-primary'
- elsif current_user&.id
  %p
    = link_to 'copier le deck', copy_public_deck_path(id: @deck.id), class: 'btn btn-xs btn-primary', method: :post

- main_cards_count = @main_cards.collect { |c| @deck.card_decks.where(card_id: c.id).first.occurences_in_main_deck }.sum
= "Main (#{main_cards_count}) :"
%ul.deck.cards-list.visual
  - [:only_green, :only_red, :only_blue, :only_white, :only_black, :gold, :colorless].each do |color|
    - sort_deck_cards(@main_cards.send(color)).each do |label, cards|
      - cards.each_with_index do |card, index|
        %li
          %span= index == 0 ? "#{label} (#{cards.collect { |c| @deck.card_decks.where(card_id: c.id).first.occurences_in_main_deck }.sum})" : '&nbsp;'.html_safe
          = image_tag(card.image_url, class: 'img-responsive')
          %span.card-link= link_to card.title(show_rarity: true), extension_set_card_path(slug: card.extension_set.slug, id: card.id)
          %span.occur-number= "x #{@deck.card_decks.where(card_id: card.id).first.occurences_in_main_deck}"

- if @sideboards.any?
  - sideboard_cards_count = @sideboards.collect { |c| @deck.card_decks.where(card_id: c.id).first.occurences_in_sideboard }.sum
  = "Sideboard (#{sideboard_cards_count}) :"
  %ul.deck.cards-list.visual
    - @sideboards.decorate.each do |card|
      %li
        = image_tag(card.image_url, class: 'img-responsive')
        %span.card-link= link_to card.title(show_rarity: true), extension_set_card_path(slug: card.extension_set.slug, id: card.id)
        %span.occur-number= @deck.card_decks.where(card_id: card.id).first.occurences_in_sideboard

.desc
  = @deck.description
